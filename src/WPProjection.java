package projections;
import java.io.File;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Scanner;


public class WPProjection extends Projection {

	//Catalogs wins generated by each player, key is player name
	private HashMap<String, Float> winsGBP = new HashMap<String, Float>();
	
	public WPProjection (File statsheet) {
		super(statsheet);
		try {
			setup();
			applyWinStabilization();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public HashMap<String, Float> getWinsGBP() {
		return winsGBP;
	}
	@Override
	//type == 0 -> Provide whole number record, type == 1 -> provide float wins
	public void display(int type) {
		if (type == 0) {
			System.out.print(this.teamName + "'s Projected Record by WP: ");
			System.out.println(this.record == null ? "Not enough information given" : this.record);			
		}
		else {
			System.out.print(this.teamName + "'s Projected Wins by WP: ");
			System.out.println(this.record == null ? "Not enough information given" : this.winsGBL);		
		}
	}
	private void setup() throws Exception{
		Scanner fileScan = new Scanner(statsheet);
		
		//initialize
		String[] fileLine = fileScan.nextLine().split(",");
		teamName = fileLine[0];
		
		fileLine = fileScan.nextLine().split(",");
		String playerName = fileLine[0];
		float wP48 = Float.parseFloat(fileLine[1]);
		float expPT = Float.parseFloat(fileLine[2]);
		//handle both expected playing time given as a percentage or a raw total
		float expMin = expPT <= 1.0 ? expPT * POSSIBLE_MINUTES: expPT;
		float wP = (expMin / 48) * wP48;
		
		winsGBP.put(playerName, wP);
		winsGBL += wP;
		
		while (fileScan.hasNext()) {
			fileLine = fileScan.nextLine().split(",");
			playerName = fileLine[0];
			wP48 = Float.parseFloat(fileLine[1]);
			expPT = Float.parseFloat(fileLine[2]);
			expMin = expPT <= 1.0 ? expPT * POSSIBLE_MINUTES: expPT;
			wP = (expMin / 48) * wP48;
			
			winsGBP.put(playerName, wP);
			winsGBL += wP;
		}
		wholeWinsGBL = Math.round(winsGBL);
		record = (wholeWinsGBL) + " - " + (TOTAL_GAMES - wholeWinsGBL);
		fileScan.close();
	}

}
